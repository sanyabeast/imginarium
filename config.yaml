# config.yaml Example Structure
tags:
  subject:
    - human_figure
    - group_of_people
    - child
    - elder
    - couple
    - animal
    - bird
    - aquatic_creature
    - fantasy_entity
    - mechanical_entity
    - shadow_silhouette
    - mythological_beast
    - alien_form
    - abstract_form
    - humanoid_robot

  action:
    - emotional_expression
    - physical_activity
    - creative_process
    - conflict
    - rest
    - interaction
    - solitude
    - transformation
    - discovery
    - ritual

  setting:
    - natural_landscape
    - urban_space
    - domestic_interior
    - industrial_area
    - mystical_realm
    - dreamlike_environment
    - outer_space
    - underwater_world
    - haunted_location
    - high_tech_lab
    - surreal_architecture
    - abandoned_place
    - minimal_environment
    - fantasy_realm

  mood:
    - joyful
    - serene
    - melancholic
    - mysterious
    - ominous
    - chaotic
    - dreamy
    - introspective
    - euphoric
    - oppressive
    - uncanny
    - nightmarish
    - ambiguous

  style:
    - realistic
    - cinematic
    - painterly
    - illustrative
    - graphic_novel
    - anime
    - abstract_art
    - glitchcore
    - surrealism
    - fantasy_art
    - low_poly
    - steampunk
    - vaporwave
    - brutalist
    - gothic

  lighting:
    - natural_light
    - backlit
    - golden_hour
    - candlelit
    - overcast
    - neon_lit
    - moonlit
    - high_contrast
    - shadowy
    - cinematic_glow

  camera_angle:
    - bird_eye
    - worm_eye
    - close_up
    - over_the_shoulder
    - wide_shot
    - surveillance_perspective
    - extreme_angle
    - fisheye
    
lm_studio:
  model: "gemma-3-4b-it"
  prompt_template: |
    Generate a highly detailed image prompt for a stock photo based on the following tags: {tags}.
    The prompt must describe the visual appearance, mood, setting, style, and lighting.
    Avoid generic phrases. Be specific and vivid. Avoid describing text or logos.
    Prompt:

comfy_ui:
  server_address: "127.0.0.1:8188" # Replace with your ComfyUI server address
  client_id: "" # Will be generated by the script
  output_directory: "output_images" # Directory to save generated images
  steps: 20
  width: 1024
  height: 1024

# Default expected node titles (can be adjusted in the script if needed):
# - Prompt Input Node Title: "CLIP Text Encode (Prompt)"
# - Image Output Node Title: "Save Image"
comfy_workflow: |
  {
    "6": {
      "inputs": {
        "text": "{PROMPT}",
        "clip": [
          "30",
          1
        ]
      },
      "class_type": "CLIPTextEncode",
      "_meta": {
        "title": "CLIP Text Encode (Positive Prompt)"
      }
    },
    "8": {
      "inputs": {
        "samples": [
          "31",
          0
        ],
        "vae": [
          "30",
          2
        ]
      },
      "class_type": "VAEDecode",
      "_meta": {
        "title": "VAE Decode"
      }
    },
    "9": {
      "inputs": {
        "filename_prefix": "flux/image",
        "images": [
          "8",
          0
        ]
      },
      "class_type": "SaveImage",
      "_meta": {
        "title": "Save Image"
      }
    },
    "27": {
      "inputs": {
        "width": {WIDTH},
        "height": {HEIGHT},
        "batch_size": 1
      },
      "class_type": "EmptySD3LatentImage",
      "_meta": {
        "title": "EmptySD3LatentImage"
      }
    },
    "30": {
      "inputs": {
        "ckpt_name": "flux.1d-fp8.safetensors"
      },
      "class_type": "CheckpointLoaderSimple",
      "_meta": {
        "title": "Load Checkpoint"
      }
    },
    "31": {
      "inputs": {
        "seed": {SEED},
        "steps": {STEPS},
        "cfg": 1,
        "sampler_name": "euler",
        "scheduler": "simple",
        "denoise": 1,
        "model": [
          "30",
          0
        ],
        "positive": [
          "35",
          0
        ],
        "negative": [
          "33",
          0
        ],
        "latent_image": [
          "27",
          0
        ]
      },
      "class_type": "KSampler",
      "_meta": {
        "title": "KSampler"
      }
    },
    "33": {
      "inputs": {
        "text": "{NEGATIVE_PROMPT}",
        "clip": [
          "30",
          1
        ]
      },
      "class_type": "CLIPTextEncode",
      "_meta": {
        "title": "CLIP Text Encode (Negative Prompt)"
      }
    },
    "35": {
      "inputs": {
        "guidance": 3.5,
        "conditioning": [
          "6",
          0
        ]
      },
      "class_type": "FluxGuidance",
      "_meta": {
        "title": "FluxGuidance"
      }
    }
  }